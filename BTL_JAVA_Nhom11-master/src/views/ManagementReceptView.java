/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

/**
 *
 * @author Minh Phuong Do
 */


import controllers.FileController;
import static controllers.Utils.iconimage;
import static controllers.Utils.rightRender;
import static controllers.Utils.setBgButtonHasColor;
import static controllers.Utils.setBgButtonNull;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Customer;
import models.Order;
import models.OrderDetail;
import models.product;
import java.awt.Image;
import java.text.DateFormat;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableRowSorter;
import static views.ManagementCustomerView.model;
import static views.ManagementEmployeeView.utils;

public class ManagementReceptView extends javax.swing.JPanel {
    public static DefaultTableModel model;
    public static DefaultTableModel modelCus;
    public static DefaultTableModel modelPro;
    SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yyyy");
    
    public static List<Customer> customers= new ArrayList<>();
    public static List<product> products =new ArrayList<>();
    public static List<Order> orders =new ArrayList<>();
    public static List<OrderDetail> orderDetails=new ArrayList<>();
    static FileController fileController;
    private  float Tongtien=0;
    static DecimalFormat numberFormat = new DecimalFormat( "###,###,###" );
    /**
     * Creates new form ManagementReceptView
     */
     
     
    public ManagementReceptView() {
        initComponents();
        Date date1=new Date();
        ipnDate.setDate(date1);
        orderDetails=fileController.readOrderDetailFromFile("orderDetail.txt");
        products =fileController.readProductFromFile("product.txt"); 
        orders=FileController.readOrderFromFile("order.txt");

        CustomersDisplay();
        actionDisplay();

        autoIncreaseOrderID();

        ImageIcon detailIcon=iconimage(24,24,"src/icons/Ticket-add-icon.png");
        detailBtn.setIcon(detailIcon);
        ImageIcon updateIcon=iconimage(24,24,"src/icons/update.png");
        updateBtn.setIcon(updateIcon);
        ImageIcon deleteIcon=iconimage(24,24,"src/icons/bin2.png");
        deleteBtn.setIcon(deleteIcon);
        ipnOrderID.setEnabled(false);
        updateBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        detailBtn.setEnabled(false);
        setBgButtonNull(addBtn, updateBtn, deleteBtn,detailBtn);
        ImageIcon searchIcon=iconimage(40,40,"src/icons/search.png");
        searchLabel.setIcon(searchIcon);
        ImageIcon addIcon=iconimage(28,28,"src/icons/add.png");
        addBtn.setIcon(addIcon);
    }

    public void autoIncreaseOrderID(){
        if(orders.size()==0){
            ipnOrderID.setText("1");
            
        }
        else{
        Integer id = orders.get(orders.size()-1).getOrderID() + 1;
        ipnOrderID.setText(id+"");
        }
        
    }
    public void setNullTextField(){
        Date date1=new Date();
        ipnDate.setDate(date1);
        ipnCusmonerID.setText("");
        ipnCusmonerID.setText("");
        ipnTotal.setText("0.0");
        autoIncreaseOrderID();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        ipnCusmonerID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        ipnTotal = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        detailBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        cbxstatus = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        ipnOrderID = new javax.swing.JFormattedTextField();
        ipnDate = new com.toedter.calendar.JDateChooser();
        Error = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderTbl = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        customerTbl = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        searchLabel = new javax.swing.JLabel();
        ipnSearch = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1200, 585));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 585));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(75, 123, 236));
        jLabel1.setText("QUẢN LÝ HÓA ĐƠN");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 370, -1));

        jPanel5.setPreferredSize(new java.awt.Dimension(766, 400));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ipnCusmonerID.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        ipnCusmonerID.setEnabled(false);
        jPanel5.add(ipnCusmonerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 275, 35));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mã hóa đơn");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Mã khách hàng");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 110, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Ngày tạo");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Tổng tiền");
        jPanel5.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        ipnTotal.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        ipnTotal.setEnabled(false);
        jPanel5.add(ipnTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 275, 35));

        addBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addBtn.setText("Thêm");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel5.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, 130, 50));

        detailBtn.setBackground(new java.awt.Color(102, 255, 102));
        detailBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        detailBtn.setText("Xem");
        detailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailBtnActionPerformed(evt);
            }
        });
        jPanel5.add(detailBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 130, 50));

        updateBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateBtn.setText("Cập nhật");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel5.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 210, 130, 50));

        deleteBtn.setBackground(new java.awt.Color(251, 57, 57));
        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteBtn.setText("Hủy đơn");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel5.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 210, 130, 50));

        cbxstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đã thanh toán", "Đã hoàn thành" }));
        cbxstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxstatusActionPerformed(evt);
            }
        });
        jPanel5.add(cbxstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 275, 35));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Trạng thái đơn hàng");
        jPanel5.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, -1, -1));

        ipnOrderID.setEnabled(false);
        jPanel5.add(ipnOrderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 21, 275, 35));
        jPanel5.add(ipnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 275, 35));

        Error.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Error.setForeground(new java.awt.Color(204, 0, 51));
        jPanel5.add(Error, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 270, 35));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 61, 950, 290));

        orderTbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        orderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã khách hàng", "Ngày lập", "Thành tiền", "Trạng thái đơn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(orderTbl);
        if (orderTbl.getColumnModel().getColumnCount() > 0) {
            orderTbl.getColumnModel().getColumn(0).setPreferredWidth(70);
            orderTbl.getColumnModel().getColumn(1).setPreferredWidth(70);
            orderTbl.getColumnModel().getColumn(4).setMinWidth(110);
        }

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 480, 330));

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customerTbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        customerTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KH", "Tên khách hàng", "Số điện thoại", "Điểm tích luỹ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTblMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(customerTbl);
        if (customerTbl.getColumnModel().getColumnCount() > 0) {
            customerTbl.getColumnModel().getColumn(0).setPreferredWidth(30);
            customerTbl.getColumnModel().getColumn(1).setPreferredWidth(100);
            customerTbl.getColumnModel().getColumn(2).setPreferredWidth(50);
            customerTbl.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        jPanel6.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 430, 330));

        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(757, 256, -1, -1));

        searchLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchLabel.setText("   Nhập số điện thoại ");
        jPanel6.add(searchLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 210, 50));

        ipnSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ipnSearchKeyReleased(evt);
            }
        });
        jPanel6.add(ipnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 10, 210, 35));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 380, 480, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
     
    private void customerTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTblMouseClicked
        // TODO add your handling code her
        int row=customerTbl.getSelectedRow();
        int id=(int)modelCus.getValueAt(row, 0);
        ipnCusmonerID.setText(id+"");
    }//GEN-LAST:event_customerTblMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        /*        // TODO add your handling code here:*/
        //them hoa don moi
       try {
            Integer id=Integer.parseInt(ipnOrderID.getText());
            Date date=ipnDate.getDate();
            SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
            String strdate=f.format(date);
            String status=cbxstatus.getSelectedItem().toString();
            ipnTotal.setText("0.0");

            DateFormat dateFormat = null;
            dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            Date d=dateFormat.parse(strdate);
            Date datenow = new Date();
            if(d.after(datenow)){
                Error.setText("Không được chọn ngày trong tương lai");
                return;
            }
            Error.setText("");
            Integer cusID=Integer.parseInt(ipnCusmonerID.getText().trim());
            Order order=new Order(id, cusID,strdate,status);
            orders.add(order);
            fileController.updatelistOrderToFile("order.txt", orders);
            actionDisplay();
            JOptionPane.showMessageDialog(null, "Thêm hóa đơn thành công");
            setNullTextField();
            //orderTbl.changeSelection(0, 0, true, true);
            orderTbl.changeSelection((orders.size()-1), 3, true, true);
            orderTbl.setRowSelectionInterval((orders.size()-1),(orders.size()-1));
                    
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Hãy nhập đủ thông tin");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi hệ thống");
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void detailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailBtnActionPerformed
        Date date=ipnDate.getDate();
        SimpleDateFormat fm= new SimpleDateFormat("dd/MM/yyyy");
        String strdate=fm.format(date);
        ManagementOrderDetail hd=new ManagementOrderDetail(this,ipnOrderID.getText(),ipnCusmonerID.getText(),strdate);
        hd.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_detailBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
            Date date=ipnDate.getDate();
            SimpleDateFormat fm= new SimpleDateFormat("dd/MM/yyyy");
            String strdate=fm.format(date);
            Date datenow = new Date();
            if(date.after(datenow)){
                Error.setText("Không được chọn ngày trong tương lai");
                return;
            }
            Error.setText("");

            ipnTotal.setText(Tongtien+"");
            Integer cusID=Integer.parseInt(ipnCusmonerID.getText().trim());
            int row=orderTbl.getSelectedRow();
            Float point=orders.get(row).getTotalMoneyDouble();
            orders.get(row).setPoint(point, 0f);
            Integer orderID=(Integer)orderTbl.getValueAt(row, 0);
            String status=cbxstatus.getSelectedItem().toString();  

            //update lai file
            Order order=new Order(orderID,cusID,strdate,status);
            orders.set(row,order);
            FileController.updatelistOrderToFile("order.txt", orders);
            orders.get(row).setPoint(0f, point);

            //update table
            orderTbl.setValueAt(orderID,row, 0);
            orderTbl.setValueAt(cusID, row, 1);
            orderTbl.setValueAt(strdate,row,2);
            orderTbl.setValueAt(numberFormat.format(Tongtien),row,3);
            orderTbl.setValueAt(status,row,4);
            CustomersDisplay();

            //dua cac o text ve null;     
            setNullTextField();
            cbxstatus.setSelectedIndex(0);
            JOptionPane.showMessageDialog(null,"Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
       } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int row=orderTbl.getSelectedRow();
        String status=(String)orderTbl.getValueAt(row, 4);
        Integer OrderID=(Integer)orderTbl.getValueAt(row, 0);
        Float Point =orders.get(row).getTotalMoneyDouble();
        if(status.equals(cbxstatus.getItemAt(0)))
        {
           int answer = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn hóa đơn này?", "Xác nhận", JOptionPane.YES_NO_OPTION, 0);
            if (answer == 0) 
            {
                for(int j=0;j<orderDetails.size();j++)
                {
                    if(orderDetails.get(j).getOrderID()==OrderID)
                    { 
                        for(int i=0; i<=products.size()-1;i++)
                            
                            if(products.get(i).getmaSP()==orderDetails.get(j).getProductID())
                            {
                                products.get(i).setSoLuong(products.get(i).getSoLuong()+orderDetails.get(j).getQuantity());
                            }
                        
                        orderDetails.remove(orderDetails.get(j));
              
                    }
                }
                fileController.updateListProductToFile("product.txt", products);
                fileController.updateListOrderDetail("orderDetail.txt",orderDetails);
                orders.get(row).setPoint(Point,0f);
                orders.remove(row);
                fileController.updatelistOrderToFile("order.txt",orders);
                actionDisplay();
                JOptionPane.showMessageDialog(null,"Đã xóa hóa đơn");
                setNullTextField();
            }
        }
        else
        {
            JOptionPane.showConfirmDialog(null, "Đã thanh toán không thể xóa");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed
     
    private void cbxstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxstatusActionPerformed

    private void orderTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTblMouseClicked
        addBtn.setEnabled(false);
        updateBtn.setEnabled(true);
        deleteBtn.setEnabled(true);
        detailBtn.setEnabled(true);
        int row=orderTbl.getSelectedRow();
        int orderID=(int)model.getValueAt(row,0);
        int cusID=(int)model.getValueAt(row,1);
        Date date;
        try {
            int srow=orderTbl.getSelectedRow();
            date = new SimpleDateFormat("dd/MM/yyyy").parse((String) model.getValueAt(srow, 2));

            ipnDate.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(ManagementReceptView.class.getName()).log(Level.SEVERE, null, ex);
        }
        Tongtien=orders.get(row).getTotalMoneyDouble();
        String status=(String)model.getValueAt(row,4);
        // đưa dữ liệu lên ô input
        ipnOrderID.setText(orderID+"");
        ipnCusmonerID.setText(cusID+"");
        ipnTotal.setText(Tongtien+"");
        if(status.equals(cbxstatus.getItemAt(0))){
            cbxstatus.setSelectedIndex(0);
        }
        else
        cbxstatus.setSelectedIndex(1);
        setBgButtonHasColor(addBtn,updateBtn,deleteBtn,detailBtn);
    }//GEN-LAST:event_orderTblMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        deleteBtn.setEnabled(false);
        updateBtn.setEnabled(false);
        addBtn.setEnabled(true);
        setNullTextField();
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void ipnSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipnSearchKeyReleased
        String search = ipnSearch.getText().trim();

        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<DefaultTableModel>(modelCus);

        customerTbl.setRowSorter(rowSorter);

        if(search.length() == 0){
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + search, 2));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ipnSearchKeyReleased

    public void actionDisplay(){
        updatestatus();

        detailBtn.setEnabled(true);
        model=(DefaultTableModel)orderTbl.getModel();
        model.setRowCount(0);
        orders.forEach(item -> {
            model.addRow(new Object[]{
                item.getOrderID(), item.getCustomerID(),item.getDate(),numberFormat.format(item.getTotalMoneyDouble()),item.getStatus()
            });
        });
        rightRender(orderTbl,3);
        rightRender(orderTbl,4);
    }

    public void CustomersDisplay()
    {
        
        modelCus=(DefaultTableModel) customerTbl.getModel();
        customers=fileController.readCustomerFromFile("customer.txt");
        modelCus.setRowCount(0);
        customers.forEach(a -> {
            modelCus.addRow(new Object[]{
                a.getCustomerId(), a.getCustomerName(), a.getCustomerPhone(), a.getAccumulatePoints()
            });
        });
        rightRender(customerTbl,3);
    }
    
    public void updatestatus(){
        try {  
           Date date=new Date();
           for(int i=0;i<orders.size();i++)
           {
                  Date a = new SimpleDateFormat("dd/MM/yyyy").parse(orders.get(i).getDate());
                    if(((date.getTime()-a.getTime())/(24*60*60*1000))>5){
                        orders.get(i).setStatus(cbxstatus.getItemAt(1));
                    }
           }
           fileController.updatelistOrderToFile("order.txt", orders);
        } catch (ParseException ex) {
            Logger.getLogger(ManagementReceptView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Error;
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox<String> cbxstatus;
    private javax.swing.JTable customerTbl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton detailBtn;
    private javax.swing.JTextField ipnCusmonerID;
    private com.toedter.calendar.JDateChooser ipnDate;
    private javax.swing.JFormattedTextField ipnOrderID;
    private javax.swing.JTextField ipnSearch;
    private javax.swing.JTextField ipnTotal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable orderTbl;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}