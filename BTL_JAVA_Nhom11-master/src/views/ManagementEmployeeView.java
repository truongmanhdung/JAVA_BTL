/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import controllers.FileController;
import controllers.Utils;
import static controllers.Utils.iconimage;
import static controllers.Utils.rightRender;
import java.awt.Color;
import java.awt.Image;
import java.net.URL;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import models.Employee;

/**
 *
 * @author Hoan
 */
public class ManagementEmployeeView extends javax.swing.JPanel {

    /**
     * Creates new form ManagementEmployeeView
     */
    public static DefaultTableModel table;
    public static List<Employee> employees= new ArrayList<>();
    Integer id;
    public static Utils utils;   
    static DecimalFormat numberFormat = new DecimalFormat( "###,###,###" );
    

    public ManagementEmployeeView() {
        initComponents();
        table= (DefaultTableModel) 
        tblEmployee.getModel();
        employees = FileController.readEmployeeFromFile("employee.txt");
        for(Employee item : employees){
            table.addRow(new Object[]{
                item.getEmployeeId(), item.getEmployeeName(), item.getEmployeePhone(),
                item.getEmployeeAddress(),numberFormat.format(item.getEmployeeSalary()),item.getEmployeeDate()
            });
        }
        rightRender(tblEmployee,4);
        idField.setEnabled(false);
        
        if(employees.size()==0){
            id=0;
        }
        else{
            id =employees.get(employees.size()-1).getEmployeeId()+ 1;                
        }
        idField.setText(id.toString());

        Date date1 = new Date();
        DateChooser.setDate(date1);
        deleteBtn.setEnabled(false);
        updateBtn.setEnabled(false);
        utils.setBgButtonNull(addBtn, updateBtn, deleteBtn);
 
        ImageIcon searchIcon=iconimage(40,40,"src/icons/search.png");
        searchLabel.setIcon(searchIcon);
        ImageIcon deleteIcon=iconimage(25,25,"src/icons/bin2.png");
        deleteBtn.setIcon(deleteIcon);
        ImageIcon updateIcon=iconimage(25,25,"src/icons/update.png");
        updateBtn.setIcon(updateIcon);
        ImageIcon addIcon=iconimage(25,25,"src/icons/add-user.png");
        addBtn.setIcon(addIcon); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeePanel = new javax.swing.JPanel();
        employeeTitle = new javax.swing.JLabel();
        Error = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        phoneField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        salaryField = new javax.swing.JTextField();
        searchField = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        DateChooser = new com.toedter.calendar.JDateChooser();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        employeePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        employeeTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        employeeTitle.setForeground(new java.awt.Color(75, 123, 236));
        employeeTitle.setText("QUẢN LÝ NHÂN VIÊN");
        employeePanel.add(employeeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 260, 50));

        Error.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Error.setForeground(new java.awt.Color(204, 0, 51));
        employeePanel.add(Error, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 710, 40));

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ tên", "Số điện thoại", "Địa chỉ", "Lương", "Ngày vào làm"
            }
        ));
        tblEmployee.setRowHeight(20);
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);
        if (tblEmployee.getColumnModel().getColumnCount() > 0) {
            tblEmployee.getColumnModel().getColumn(3).setResizable(false);
            tblEmployee.getColumnModel().getColumn(5).setResizable(false);
        }

        employeePanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 870, 260));

        addBtn.setBackground(new java.awt.Color(116, 213, 128));
        addBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Thêm");
        addBtn.setPreferredSize(new java.awt.Dimension(70, 25));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        employeePanel.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 330, 130, 50));

        updateBtn.setBackground(new java.awt.Color(102, 255, 102));
        updateBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Cập nhật");
        updateBtn.setPreferredSize(new java.awt.Dimension(70, 25));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        employeePanel.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 330, 130, 50));

        deleteBtn.setBackground(new java.awt.Color(204, 37, 31));
        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Xóa");
        deleteBtn.setPreferredSize(new java.awt.Dimension(70, 25));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        employeePanel.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 330, 130, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã nhân viên");
        employeePanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 110, -1));

        idField.setForeground(new java.awt.Color(255, 255, 255));
        idField.setPreferredSize(new java.awt.Dimension(6, 35));
        employeePanel.add(idField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 275, 35));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tên");
        employeePanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 81, -1));

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        employeePanel.add(nameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 275, 35));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Số điện thoại");
        employeePanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, 85, -1));
        employeePanel.add(phoneField, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 110, 275, 35));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Địa chỉ");
        employeePanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 73, -1));
        employeePanel.add(addressField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 275, 35));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Lương");
        employeePanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, -1, -1));

        salaryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryFieldActionPerformed(evt);
            }
        });
        employeePanel.add(salaryField, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 170, 275, 35));

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        employeePanel.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 275, 35));

        searchLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchLabel.setMaximumSize(new java.awt.Dimension(60, 70));
        searchLabel.setMinimumSize(new java.awt.Dimension(60, 70));
        employeePanel.add(searchLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 80, 50));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Ngày bắt đầu");
        employeePanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, -1, -1));

        DateChooser.setDateFormatString("dd-MM-yyyy\n");
        DateChooser.setPreferredSize(new java.awt.Dimension(101, 19));
        employeePanel.add(DateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 230, 275, 35));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(employeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1094, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(employeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try{
            String name = nameField.getText().trim();
            String phone = phoneField.getText().trim();
            String address = addressField.getText().trim();
            String salary= salaryField.getText().trim();
           // SimpleDateFormat da=new SimpleDateFormat("dd-MMMM-YYYY");
//            Date d=DateChooser.getDate();
//            System.out.println("g:"+d);
             String date=((JTextField)DateChooser.getDateEditor().getUiComponent()).getText();

            String regexName = "^[a-z A-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]{0,50}$";
            Pattern pattern = Pattern.compile(regexName);
            Matcher match = pattern.matcher(name);
            if(name.compareTo("") == 0){
                Error.setText("Vui lòng nhập tên");
                return;
            }
            if(!match.matches()){
                Error.setText("Tên không bao gồm số và các kí tự đặc biệt, tối đa 30 kí tự");
                return;
            }

            String regexPhone = "^[0-9]{10,11}$";
            Pattern patternPhone = Pattern.compile(regexPhone);
            Matcher matchPhone = patternPhone.matcher(phone);
            if(phone.compareTo("") == 0){
                Error.setText("Vui lòng nhập số điện thoại");
                return;
            }
            if(!matchPhone.matches()){
                Error.setText("Nhập sai số điện thoại");
                return;
            }
            
            String regexSalary = "^\\d+$";
            Pattern patternSalary = Pattern.compile(regexSalary);
            Matcher matchSalary = patternSalary.matcher(salary);

            if(salary.compareTo("")==0){
                Error.setText("Vui lòng nhập lương");
                return;
            }
            if(!matchSalary.matches()){
                Error.setText("Lương chỉ bao gồm chữ số");
                return;
            }

            if(address.compareTo("") == 0){
                Error.setText("Vui lòng nhập địa chỉ");
                return;
            }
            DateFormat dateFormat = null;
            dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            Date d=dateFormat.parse(date);
            Date datenow = new Date();
            if(d.after(datenow)){
                Error.setText("Không được chọn ngày bắt đầu làm trong tương lai");
                return;
            }
            Error.setText("");
            Employee emp = new Employee(id,name,phone,address, Integer.parseInt(salary),date);
            FileController.writeEmployeeToFile("employee.txt",emp);
            table.addRow(new Object[]{
                id,name,phone,address,salary,date
            });
            employees.add(emp);
            
            clearField();
            
            JOptionPane.showMessageDialog(null, "Thêm nhân viên mới thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            //JOptionPane.showMessageDialog(rootPane,"Thêm nhân viên mới thành công");
            setIdField();

        }
         catch (Exception e) {
            Error.setText("Vui lòng lòng nhập đầy đủ thông tin");
            Error.setText(e.toString());
            System.out.println("E:"+e);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try{
        Integer id = Integer.parseInt(idField.getText().trim());
        
        String name = nameField.getText();
        String phone= phoneField.getText();
        String address = addressField.getText();
        String salary=salaryField.getText();
        String date=((JTextField)DateChooser.getDateEditor().getUiComponent()).getText();
        
            String regexName = "^[a-z A-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]{0,50}$";
            Pattern pattern = Pattern.compile(regexName);
            Matcher match = pattern.matcher(name);
            if(name.compareTo("") == 0){
                Error.setText("Vui lòng nhập tên");
                return;
            }
            if(!match.matches()){
                Error.setText("Tên không bao gồm số và các kí tự đặc biệt, tối đa 30 kí tự");
                return;
            }

            String regexPhone = "^[0-9]{10,11}$";
            Pattern patternPhone = Pattern.compile(regexPhone);
            Matcher matchPhone = patternPhone.matcher(phone);
            if(phone.compareTo("") == 0){
                Error.setText("Vui lòng nhập số điện thoại");
                return;
            }
            if(!matchPhone.matches()){
                Error.setText("Nhập sai số điện thoại");
                return;
            }
            String regexSalary = "^\\d+$";
            Pattern patternSalary = Pattern.compile(regexSalary);
            Matcher matchSalary = patternSalary.matcher(salary);

            if(salary.compareTo("")==0){
                Error.setText("Vui lòng nhập lương");
                return;
            }
            if(!matchSalary.matches()){
                Error.setText("Lương chỉ bao gồm chữ số");
                return;
            }

            if(address.compareTo("") == 0){
                Error.setText("Vui lòng nhập địa chỉ");
                return;
            }
            DateFormat dateFormat = null;
            dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            Date d=dateFormat.parse(date);
            Date datenow = new Date();
            if(d.after(datenow)){
               
                Error.setText("Không được chọn ngày bắt đầu làm trong tương lai");
                return;
            }
        Error.setText("");

        int row = tblEmployee.getSelectedRow();
 
        Employee emp = new Employee(id,name, phone, address,Integer.parseInt(salary),date);
        employees.set(row, emp);
        FileController.updateEmployeeToFile("employee.txt", employees);

        tblEmployee.setValueAt(id, row, 0);
        tblEmployee.setValueAt(name, row, 1);
        tblEmployee.setValueAt(phone, row, 2);
        tblEmployee.setValueAt(address, row, 3);
        tblEmployee.setValueAt(salary, row, 4);
        tblEmployee.setValueAt(date, row, 5);

        
        JOptionPane.showMessageDialog(null, "Cập nhật thông tin nhân viên thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        //JOptionPane.showMessageDialog(rootPane,"Cập nhật thông tin nhân viên thành công");
        updateBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        addBtn.setEnabled(true);
       
        clearField();
        
        Date date1 = new Date();
        DateChooser.setDate(date1);
        setIdField();
        utils.setBgButtonNull(addBtn, updateBtn, deleteBtn);
        }catch (Exception e) {
            Error.setText("Vui lòng lòng nhập đầy đủ thông tin");
            Error.setText(e.toString());
            System.out.println("E:"+e);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int answer= JOptionPane.showConfirmDialog(null, "Xóa nhân viên này?", "Xác nhận", JOptionPane.YES_NO_OPTION,0);
        System.out.print(answer);

        if(answer==0){
            int row = tblEmployee.getSelectedRow();
            table.removeRow(row);

            employees.remove(row);
            FileController.updateEmployeeToFile("employee.txt",employees);

            updateBtn.setEnabled(false);
            deleteBtn.setEnabled(false);
            addBtn.setEnabled(true);

            JOptionPane.showMessageDialog(null, "Xóa nhân viên thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }

        //JOptionPane.showMessageDialog(rootPane,"Xóa nhân viên thành công");
        clearField();
        Date date1 = new Date();
        DateChooser.setDate(date1);
        setIdField();
        utils.setBgButtonNull(addBtn, updateBtn, deleteBtn);
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        try {
            int row = tblEmployee.getSelectedRow();
            Integer id = (Integer)tblEmployee.getValueAt(row,0);
            String name = (String) tblEmployee.getValueAt(row,1);
            String phone = (String) tblEmployee.getValueAt(row,2);
            String address = (String) tblEmployee.getValueAt(row,3);
            Integer salary=employees.get(row).getEmployeeSalary();
            //Date date=(Date) tblEmployee.getValueAt(row, 5);
            SimpleDateFormat da=new SimpleDateFormat("dd-MM-YYYY");
            Date date;
            date = new SimpleDateFormat("dd-MM-yyyy").parse((String)tblEmployee.getValueAt(row, 5));
            idField.setText(id.toString());
            nameField.setText(name);
            phoneField.setText(phone);
            addressField.setText(address);
            salaryField.setText(salary.toString());
            DateChooser.setDate(date);
            Error.setText("");
                    
            idField.setEnabled(false);
            addBtn.setEnabled(false);
            deleteBtn.setEnabled(true);
            updateBtn.setEnabled(true);
            utils.setBgButtonHasColor(addBtn, updateBtn, deleteBtn);
        } catch (ParseException ex) {
            Logger.getLogger(ManagementEmployeeView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void salaryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salaryFieldActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        DefaultTableModel tm=(DefaultTableModel) tblEmployee.getModel();

        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(tm);
        tblEmployee.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)" + searchField.getText().trim().toLowerCase()));
    }//GEN-LAST:event_searchFieldKeyReleased

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        deleteBtn.setEnabled(false);
        updateBtn.setEnabled(false);
        addBtn.setEnabled(true);
        
        idField.setText("");
        nameField.setText("");
        phoneField.setText("");
        addressField.setText("");
        salaryField.setText("");
        Date date1 = new Date();
        DateChooser.setDate(date1);
        if(employees.size()==0){
            id=0;
        }
        else{
            id =employees.get(employees.size()-1).getEmployeeId()+ 1;
            System.out.println(id);
        }
        idField.setText(id.toString());
        utils.setBgButtonNull(addBtn, updateBtn, deleteBtn);
    }//GEN-LAST:event_formMouseClicked
    
    private void clearField(){
        idField.setText("");
        nameField.setText("");
        phoneField.setText("");
        addressField.setText("");
        salaryField.setText("");
    }

    private void setIdField(){
        if(employees.size()==0){
            id=0;
        }
        else{
            id =employees.get(employees.size()-1).getEmployeeId()+ 1;
            System.out.println(id);
        }
        idField.setText(id.toString());
    }
 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JLabel Error;
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField addressField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JPanel employeePanel;
    private javax.swing.JLabel employeeTitle;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField phoneField;
    private javax.swing.JTextField salaryField;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
