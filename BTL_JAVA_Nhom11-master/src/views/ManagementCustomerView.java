/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import controllers.FileController;
import controllers.Utils;
import static controllers.Utils.iconimage;
import static controllers.Utils.rightRender;
import java.awt.Color;
import java.awt.Image;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import models.Customer;

/**
 *
 * @author Minh Phuong Do
 */
public class ManagementCustomerView extends javax.swing.JPanel {

    /**
     * Creates new form ManagementCustomerView
     */
    public static DefaultTableModel model;
    public static List<Customer> customers= new ArrayList<>();
    public static DecimalFormat numberFormat = new DecimalFormat( "###,###,###" );
    public static Utils utils;
  
    public ManagementCustomerView() {
        initComponents();
        model= (DefaultTableModel) tbCustomer.getModel();
        customers = FileController.readCustomerFromFile("customer.txt");
        modelReload();
        inpCustomerId.setEnabled(false);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        inpAccumulatePoints.setEnabled(false);

        utils.setBgButtonNull(btnAdd, btnUpdate, btnDelete);
        setID();
        
        ImageIcon searchIcon=iconimage(40,40,"src/icons/search.png");
        searchLabel.setIcon(searchIcon);
        ImageIcon deleteIcon=iconimage(25,25,"src/icons/bin2.png");
        btnDelete.setIcon(deleteIcon);
        ImageIcon updateIcon=iconimage(25,25,"src/icons/update.png");
        btnUpdate.setIcon(updateIcon);
        ImageIcon addIcon=iconimage(25,25,"src/icons/add-user.png");
        btnAdd.setIcon(addIcon);
    }


    
    public void setID() {
        Integer id;
        if(customers.size()==0) id = 0;
        else id = customers.get(customers.size()-1).getCustomerId() + 1;
        inpCustomerId.setText(id+"");
    }
    
    public void setInpNull() {
        inpCustomerName.setText("");
        inpCustomerPhone.setText("");
        inpAccumulatePoints.setText("");
    }
    
    public void modelReload()
    {
        model.setRowCount(0);
        customers.forEach(a -> {
            String pointFormat = numberFormat.format(a.getAccumulatePoints());
            model.addRow(new Object[]{
                a.getCustomerId(), a.getCustomerName(), a.getCustomerPhone(), pointFormat
            });
        });
        rightRender(tbCustomer,3);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        form = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        inpCustomerId = new javax.swing.JTextField();
        inpCustomerPhone = new javax.swing.JTextField();
        inpCustomerName = new javax.swing.JTextField();
        inpAccumulatePoints = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbCustomer = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        searchLabel = new javax.swing.JLabel();
        inpSearch = new javax.swing.JTextField();
        error = new javax.swing.JLabel();

        setForeground(new java.awt.Color(76, 175, 80));

        form.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        form.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(75, 123, 236));
        jLabel1.setText("QUẢN LÝ KHÁCH HÀNG");
        form.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã khách hàng");
        form.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Họ tên");
        form.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Số điện thoại");
        form.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Điểm tích lũy");
        form.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, -1, -1));

        inpCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpCustomerIdActionPerformed(evt);
            }
        });
        form.add(inpCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 275, 35));

        inpCustomerPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpCustomerPhoneActionPerformed(evt);
            }
        });
        form.add(inpCustomerPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 275, 35));

        inpCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpCustomerNameActionPerformed(evt);
            }
        });
        form.add(inpCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 275, 35));

        inpAccumulatePoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpAccumulatePointsActionPerformed(evt);
            }
        });
        form.add(inpAccumulatePoints, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 275, 35));

        tbCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ Tên", "Số điện thoại", "Điểm tích lũy"
            }
        ));
        tbCustomer.setPreferredSize(new java.awt.Dimension(450, 600));
        tbCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCustomerMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbCustomer);
        if (tbCustomer.getColumnModel().getColumnCount() > 0) {
            tbCustomer.getColumnModel().getColumn(1).setResizable(false);
        }

        form.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 880, 360));

        btnAdd.setBackground(new java.awt.Color(75, 123, 236));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        form.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, 130, 50));

        btnUpdate.setBackground(new java.awt.Color(102, 255, 102));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        form.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 270, 130, 50));

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        form.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 270, 130, 50));
        form.add(searchLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 50, 40));

        inpSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inpSearchKeyReleased(evt);
            }
        });
        form.add(inpSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 275, 35));

        error.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        error.setForeground(new java.awt.Color(204, 0, 51));
        form.add(error, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 470, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(form, javax.swing.GroupLayout.PREFERRED_SIZE, 956, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 299, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(form, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inpCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpCustomerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpCustomerIdActionPerformed

    private void inpCustomerPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpCustomerPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpCustomerPhoneActionPerformed

    private void inpCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpCustomerNameActionPerformed

    private void inpAccumulatePointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpAccumulatePointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpAccumulatePointsActionPerformed

    private void tbCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCustomerMouseClicked
        // TODO add your handling code here:
        int row = tbCustomer.getSelectedRow();
        Integer id = (Integer)model.getValueAt(row, 0);
        String name = (String) model.getValueAt(row, 1);
        String phone = (String)model.getValueAt(row, 2);
        Float accPoints = customers.get(row).getAccumulatePoints();
        //Float accPoints = (Float) model.getValueAt(row, 3);

        inpCustomerId.setText(id+"");
        inpCustomerName.setText(name);
        inpCustomerPhone.setText(phone+"");
        inpAccumulatePoints.setText(accPoints+"");

        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        utils.setBgButtonHasColor(btnAdd, btnUpdate, btnDelete);
    }//GEN-LAST:event_tbCustomerMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(inpCustomerName.getText().trim().compareTo("") == 0){
            error.setText("Vui lòng nhập tên");
            return;
        }
        String regexName = "^[a-z A-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]{0,50}$";
                Pattern pattern = Pattern.compile(regexName);
        Matcher match = pattern.matcher(inpCustomerName.getText().trim());
        if(!match.matches()){
            error.setText("Tên không bao gồm số và các kí tự đặc biệt,tối đa 30 kí tự");
            return;
        }
            
            
        if(inpCustomerPhone.getText().trim().compareTo("") == 0){
            error.setText("Vui lòng nhập số điện thoại");
            return;
        }
        String regexPhone = "^[0-9]{10,11}$";
        Pattern patternPhone = Pattern.compile(regexPhone);
        Matcher matchPhone = patternPhone.matcher(inpCustomerPhone.getText().trim());
        if(!matchPhone.matches()){
            error.setText("Số điện thoại chỉ bao gồm số: 10 số hoặc 11 số");
            return;
        }
            
        Integer id = Integer.parseInt(inpCustomerId.getText().trim());
        String name = inpCustomerName.getText().trim();
        String phone = inpCustomerPhone.getText().trim();
        Float accPoints = 0f;

        Customer cus = new Customer(id, name, phone, accPoints);
        FileController.writeCustomerToFile("customer.txt", cus);
        model.addRow(new Object[]{
            id, name, phone, accPoints
        });
        customers.add(cus);
        setInpNull();
        setID();
        error.setText("");
        inpCustomerName.requestFocus();
        JOptionPane.showMessageDialog(null, "Thêm khách hàng mới thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);           
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(inpCustomerName.getText().trim().compareTo("") == 0){
            error.setText("Vui lòng nhập tên");
            return;
        }

        String regexName = "^[a-z A-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\s\\W|_]+$";
        Pattern pattern = Pattern.compile(regexName);
        Matcher match = pattern.matcher(inpCustomerName.getText().trim());
        if(!match.matches()){
            error.setText("Tên chỉ bao gồm các kí tự và tối đa 50 kí tự");
            return;
        }
               
        if(inpCustomerPhone.getText().trim().compareTo("") == 0){
        error.setText("Vui lòng nhập số điện thoại");
        return;
        }
        String regexPhone = "^[0-9]{10,11}$";
        Pattern patternPhone = Pattern.compile(regexPhone);
        Matcher matchPhone = patternPhone.matcher(inpCustomerPhone.getText().trim());
        if(!matchPhone.matches()){
            error.setText("Số điện thoại chỉ bao gồm số: 10 số hoặc 11 số");
            return;
        }

        Integer id = Integer.parseInt(inpCustomerId.getText().trim());
        String name = inpCustomerName.getText().trim();
        String phone = inpCustomerPhone.getText().trim();
        Float accPoints = Float.parseFloat(inpAccumulatePoints.getText().trim());

        int row= tbCustomer.getSelectedRow();

        customers.set(row, new Customer(id, name, phone, accPoints));
        FileController.writeListCustomerFile("customer.txt", customers);
        
        setInpNull();
        modelReload();
        
        utils.setBgButtonNull(btnAdd, btnUpdate, btnDelete);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(true);
        setID();
        error.setText("");
        JOptionPane.showMessageDialog(null, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        inpCustomerId.requestFocus();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int answer = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa khách hàng này?", "Xác nhận", JOptionPane.YES_NO_OPTION,0);
        if(answer == 0){
            int row= tbCustomer.getSelectedRow();
            if(customers.get(row).getAccumulatePoints()>0)
            {
                JOptionPane.showMessageDialog(null, "Không thể xóa khách hàng này");
            }
            else{
                model.removeRow(row);
                customers.remove(row);
                FileController.writeListCustomerFile("customer.txt", customers);

                btnUpdate.setEnabled(false);
                btnDelete.setEnabled(false);
                btnAdd.setEnabled(true);
                setID();
                inpCustomerId.requestFocus();
                utils.setBgButtonNull(btnAdd, btnUpdate, btnDelete);
                setInpNull();
                }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void inpSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inpSearchKeyReleased
        // TODO add your handling code here:

        String search = inpSearch.getText().trim().toLowerCase();

        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<DefaultTableModel>(model);

        tbCustomer.setRowSorter(rowSorter);

        if(search.length() == 0){
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + search, 2));
        }
    }//GEN-LAST:event_inpSearchKeyReleased

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        setID();
        setInpNull();
        btnAdd.setEnabled(true);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        inpAccumulatePoints.setEnabled(false);
        modelReload();
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        tbCustomer.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);

        utils.setBgButtonNull(btnAdd, btnUpdate, btnDelete);
    }//GEN-LAST:event_formMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel error;
    private javax.swing.JPanel form;
    private javax.swing.JTextField inpAccumulatePoints;
    private javax.swing.JTextField inpCustomerId;
    private javax.swing.JTextField inpCustomerName;
    private javax.swing.JTextField inpCustomerPhone;
    private javax.swing.JTextField inpSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTable tbCustomer;
    // End of variables declaration//GEN-END:variables
}
